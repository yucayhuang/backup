 private List<Transform> gridList = new List<Transform>();
 
    private string gridPrefabName = "Prefab/Grid";
    private string itemPrefabName = "Prefab/Item";
 
	void Awake () 
    {
        for (int i = 0; i < row; i++)
        {
            for (int j = 0; j < column; j++)
            {
                GameObject go = Instantiate(Resources.Load(gridPrefabName)) as GameObject;
                go.transform.SetParent(transform, false);
                gridList.Add(go.transform);
            }
        }
	}
 
    //添加物品
    public void AddItem(string itemName, int count = 1)
    {
        //如果有相同的物品，则只是更改包里该物品的数量；否则实例化该物品，改数量
        bool hasSameItem = false;
 
        for (int i = 0; i < gridList.Count; i++)
        {
            //如果有物品
            if(gridList[i].childCount > 0)
            {
                Transform tra = gridList[i].GetChild(0);
                //如果有该物品
                string name = itemName.Substring(itemName.LastIndexOf('/') + 1);
                if (tra.GetComponent<Image>().sprite.name.Equals(name))
                {
                    hasSameItem = true;
                    ModifyCount(tra.GetChild(0).GetComponent<Text>(), count);
                    break;
                }
            }
        }
 
        if(!hasSameItem)
        {
            for (int i = 0; i < gridList.Count; i++)
            {
                if(gridList[i].childCount == 0)
                {
                    GameObject go = Instantiate(Resources.Load(itemPrefabName)) as GameObject;
                    go.GetComponent<Image>().sprite = Resources.Load<Sprite>(itemName);
                    go.transform.SetParent(gridList[i], false);
 
                    ModifyCount(go.transform.GetChild(0).GetComponent<Text>(), count);
                    break;
                }
            }
        }
    }
